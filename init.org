#+PROPERTY: header-args :tangle ./init.el


* Tangle file
C-c C-v t : M-x org-babel-tangle

Remove .emacs file if any

Use init.el

* Calendar
#+begin_src elisp :tangle yes
;;
;; calendar start on monday
;;
(setq calendar-week-start-day 1)
;; Display Week
(setq calendar-intermonth-text
      '(propertize
        (format "%2d"
                (car
                 (calendar-iso-from-absolute
                  (calendar-absolute-from-gregorian (list month day year)))))
        'font-lock-face 'font-lock-warning-face))

(setq calendar-intermonth-header
      (propertize "Wk"                  ; or e.g. "KW" in Germany
                  'font-lock-face 'font-lock-keyword-face))
#+end_src

* WindMove & Shrink Windows
#+begin_src elisp :tangle yes
;;
;; WindMove :tangle yes
;;
(global-set-key (kbd "C-c <left>")  'windmove-left)
(global-set-key (kbd "C-c <right>") 'windmove-right)
(global-set-key (kbd "C-c <up>")    'windmove-up)  
(global-set-key (kbd "C-c <down>")  'windmove-down)
#+end_src

#+begin_src elisp
;; resize buffer
(global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
(global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
(global-set-key (kbd "S-C-<down>") 'shrink-window)
(global-set-key (kbd "S-C-<up>") 'enlarge-window)
#+end_src


* Startup, general config
#+begin_src elisp :tangle yes
  ;;
  ;; StartUp Windows
  ;; Backup Files
  ;;
  (setq inhibit-startup-screen t)
  (add-hook 'window-setup-hook 'toggle-frame-maximized t)
  (setq backup-directory-alist '(("." . "~/.emacs.d/backup")))
  ;; display column and line
  (setq line-number-mode t)
  (setq column-number-mode t)

#+end_src

* Dired
#+begin_src elisp :tangle yes
;;
;; Dired
;;
(put 'dired-find-alternate-file 'disabled nil)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages '(multiple-cursors magit)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
#+end_src

* Shell 
#+begin_src elisp :tangle yes
;;
;; Shell
;;
#+end_src

* Multiple Cursor 
#+begin_src elisp :tangle yes
;;
;; Multiple Cursor test 0
;; M-x package-install multiple-cursors
;; https://github.com/magnars/multiple-cursors.el
(require 'multiple-cursors)
(global-set-key (kbd "C-S-c C-S-c") 'mc/edit-lines)
(global-set-key (kbd "C->") 'mc/mark-next-like-this)
(global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
(global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this)
#+end_src

* Tangle on save (not working)
#+begin_src elisp :tangle yes
;; Automatically tangle our  config file when we save it test
(defun efs/org-babel-tangle-config ()
  (when (string-equal (buffer-file-name)
                      (expand-file-name "./init.el"))
    ;; Dynamic scoping to the rescue
    (let ((org-confirm-babel-evaluate nil))
      (org-babel-tangle))))
(add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'efs/org-babel-tangle-config)))
#+end_src

* Magit
use-package is set up
#+begin_src elisp :tangle yes
  (use-package magit
    :ensure t)
#+end_src
