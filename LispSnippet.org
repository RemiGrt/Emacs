- C-c C-c: Evaluate block code, le resutat s'affiche en tant que bloc result
- C-x C-e: Evalue une ligne lisp (dans n'importe quel buffer, le resultat est dans mini buffer
- C-j : Evalue dans scratch pad
  
* Affiche le repertoire de conf. d'Emacs
#+begin_src elisp 
(message user-emacs-directory)
#+end_src

#+RESULTS:
: ~/.emacs.d/

* Load init.el
#+begin_src elisp
  (defun remi-load-init()
  "Fonction chargeant le fichier de ini.el"
  (interactive)
    (load-file (concat user-emacs-directory "init.el")))
#+end_src

#+RESULTS:
: load-init

* Write to a buffer
#+begin_src elisp
  (get-buffer-create "Remi")
  (defun remi-write-buffer(filename)
  " Give some infos"
  (interactive "fFile name: ")
  (with-current-buffer "Remi"
    (goto-char (point-max))
    (insert "Hello World " ))))
#+end_src

#+RESULTS:
: remi-file-info

* Echo current buffer
#+begin_src elisp
(defun echo-current-buffer-filename (f)
  (interactive (list (buffer-file-name)))
  (message "Current buffer filename is %s" f))
#+end_src

#+RESULTS:
: echo-current-buffer-filename

*
#+begin_src elisp
      (defun remi-info-buffer(filename)
	(interactive "fFile name: ")
	(switch-to-buffer (find-file-noselect filename))
	(count-words ())
	)
  ;;	(with-current-buffer (find-file-noselect filename)))

#+end_src

#+RESULTS:
: remi-info-buffer

* Select current line
From https://irfu.cea.fr/Pisp/frederic.galliano//Computing/manual_elisp.pdf

#+begin_src elisp
(defun select-current-line ()
"Select the current line"
(interactive)
(let ((pos (line-beginning-position)))
(end-of-line)
(set-mark pos)))
#+end_src

#+RESULTS:
: select-current-line


https://irfu.cea.fr/Pisp/frederic.galliano/

#+begin_src elisp
  (defun select-current-word ()
  "Select the word under cursor.
  “word” here is considered any alphanumeric sequence with “_” or “-”."
  (interactive)
  (let (pt)
  (skip-chars-backward "-_A-Za-z0-9")
  (setq pt (point))
  (skip-chars-forward "-_A-Za-z0-9")
  (set-mark pt)))
#+end_src

#+RESULTS:
: select-current-word
