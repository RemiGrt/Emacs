(defun rg-modify-file (filename)
(interactive "fFile to insert into:")
(let ((buff (find-file-noselect filename)))
  (with-current-buffer buff
    (goto-char(point-min))
    (insert "Paf!\n")
    (goto-char(point-max))
    (insert "Pouf!\n")
    (save-buffer))
  (kill-buffer buff)))

(defun rg-insert-file-string (file str)
  "Insert string into chosen file."
  (interactive "fFile to insert into: \nsString to insert: ")
  (with-temp-file file
    (insert str)))

(require 's)
(defun pk/sort-words-in-region (beg end &optional reversed)
  "In active region sort words alphabetically in ascending order.
With prefix argument REVERSED use descending order.
Don't use this function on regions with nested brackets."
  (interactive "r\nP")
  (unless (region-active-p) (user-error "No active region to sort!"))
  (let* ((str (s-trim (buffer-substring-no-properties beg end)))
         (com (string-match-p "," str))
         (cln (replace-regexp-in-string "[\]\[(){}\']+\\|\\.$" "" str))
         (wrd (split-string cln (if com "," " ") t " "))
         (new (s-join (if com ", " " ")
                      (sort wrd (if reversed #'string> #'string<)))))
    (save-excursion
      (goto-char beg)
      (delete-region beg end)
      (when (and (looking-back "[^ ]") (not (s-starts-with? " " str)))
          (insert " "))
      (insert
       (replace-regexp-in-string "[^\]\[(){}\'\.]+" new str)))))
